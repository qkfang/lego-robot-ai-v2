{
  "doc_id": "doc_4",
  "doc_title": "The Power of Random",
  "doc_text": "### The Power of Random\n\nSometimes, the best program is an unpredictable one. When you don’t know what a program will do next, it seems more alive. To achieve this result, add some randomness.\n\nThe program below will set the Power Button light on the SPIKE Prime Hub to ten different colors, with a random delay between each color change.\n\n```\nimport random\nimport time\nfrom hub import light\n\nfor color in range(11):\n    # Set the light to the current color.\n    light.color(light.POWER, color)\n\n    # Keep the light on for 0.5 to 1.5 seconds.\n    sleep_time = random.randint(500,1500)\n    time.sleep_ms(sleep_time)\n```\n\nEach color is represented by a different number. The `for` loop iterates over `range(11)` and assigns the value to the `color` variable. It will be `0` (black) which turns the light off the first time the loop runs and `10` (white) in the last iteration. Notice that this program imports the `random` module, which contains several functions to add randomness.\n\nThis example uses the `randint()` function, with a `start` value of 500 and a `stop` value of 1500. With these arguments, the function _returns_ a number between 500 and 1500 to add some variation to the sleep time. However, the colors will always light up in the same order even if you run the program several times. Luckily, the `random` module has some other functions to add even more randomness to the program.\n\n#### Loop Forever\n\nYou can also use a `while` loop to repeat something forever instead of a specific number of times. In Python, the simplest way to create such a loop is to write `while True:` followed by the code you want to run forever. The next example uses a `while True` loop to run a little disco show forever or until you stop the program.\n\n```\nimport random\nimport time\nfrom hub import light\n\nwhile True:\n    # Generate a random number between 1 and 9.\n    random_color = random.randint(1, 9)\n\n    # Set the light to the random color.\n    light.color(light.POWER, random_color)\n\n    # Keep the light on for 0.5 to 1.5 seconds.\n    sleep_time = random.randint(500, 1500)\n    time.sleep_ms(sleep_time)\n```\n\nNotice that the Power Button lights up in random colors, with a random delay between each color change. The example uses the `randint()` function again to generate a number between 1 and 9 (both included), which corresponds to the different color numbers excluding black (`0`) and white (`10`).\n\n#### Lists and Constants\n\nIf you want the light show to only include certain colors, you can put them in a _list_ and then choose a random color from it. You create a new list like a variable, first writing the list name, then the `=` sign, and finally the values inside square brackets, separated with commas. For a simple list with at least two _items_, write `my_list = [ 1, 2 ]`. You can add as many values as you want.\n\nAs you’ve seen in the previous examples, each color is represented by a different number. You use this number to set the light to that color, for example, number `9` will set the light to red. However, using numbers for colors can make it harder for other readers to know what your code will do. You could add comments to describe each value, but a better way is to make variables for each color. The `color` module has a variable `RED` so you can write `color.RED` instead of the number `9` in your code. (A variable listed with all capital letters is a _constant_, which means you shouldn’t change it.)\n\nThe example below imports the `color` module and uses some of the color constants to create the list `colors`. This time, the `randint()` function determines how many times the `for` loop runs, and the light turns white at the end of this little random light show.\n\n```\nimport random\nimport time\nimport color\nfrom hub import light\n\n# Create a list with some different light colors.\ncolors = [color.RED, color.GREEN, color.BLUE, color.YELLOW ]\n\n# Change the light five to ten times.\ntimes = random.randint(5, 10)\n\nfor i in range(times):\n    # Choose a random color from the list of colors.\n    random_color = random.choice(colors)\n\n    # Set the light to the random color.\n    light.color(light.POWER, random_color)\n\n    # Keep the light on for 0.5 to 1.5 seconds.\n    sleep_time = random.randint(500, 1500)\n    time.sleep_ms(sleep_time)\n\n# Set the light to white.\nlight.color(light.POWER, color.WHITE)\n```\n\nYou’ll see the Power Button light change to a random color from the list, for a random number of times, with a random delay between each color change. The example uses the `choice()` function to pick a random color from the `colors` list.\n\n#### Challenge\n\nCan you change the code so there are different colors in the `colors` list?"
}