{
  "Module_Name": "Motor",
  "Module_Description": "To use a Motor add the following import statement to your project:",
  "SubModule_Name": "Motor",
  "SubModule_Description": "To use a Motor add the following import statement to your project:",
  "Function_Name": "stop",
  "Function": {
    "Function_Name": "stop",
    "Function_Signature": "stop(port: int, *, stop: int = BRAKE) -> None",
    "Function_Description": "Stops a motor",
    "Function_Arguments": [
      {
        "Argument_Name": "port: int",
        "Argument_Description": "A port from the port submodule in the hub module"
      },
      {
        "Argument_Name": "stop: int",
        "Argument_Description": "The behavior of the Motor after it has stopped. Use the constants in the motor  module.\nPossible values are\nmotor.COAST to make the motor coast until a  stop\nmotor.BREAK to brake and continue to brake after  stop\nmotor.HOLD to tell the motor to hold it's  position\nmotor.CONTINUE to tell the motor to keep running at whatever velocity  it's running at until it gets another command\nmotor.SMART_COAST to make the  motor brake until stop and then coast and compensate for inaccuracies in the next  command\nmotor.SMART_BRAKE to make the motor brake and continue to brake after  stop and compensate for inaccuracies in the next command"
      }
    ],
    "Function_Snippet": [
      {
        "Python_Code": "from hub import port\nimport motor, time\n\n# Start motor \nmotor.run(port.A, 1000)\n\n# Wait for 2 seconds \ntime.sleep_ms(2000)\n\n# Stop motor \nmotor.stop(port.A)"
      }
    ]
  }
}